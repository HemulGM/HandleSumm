//Вспомогательная функция для инвертирования строки
function InvertStr(Str:string):String;
var i:Word;
begin
 for i:= Str.Length downto 1 do Result:=Result + Str[i];
end;

//Вспомогательная функция для увеличения отдельно взятой цифры в длинном числе
procedure IncStr(var Value:string; const Index:Word);
begin
 if Index > Value.Length then                            //Если индекс привышает длину числа,
  begin                                                  //
   Value:=Value+'1';                                     //то просто сразу добавляем десяток к числу
   Exit;                                                 //и выходим
  end;                                                   //Если же индекс не привышает длину
 if Value[Index] <> '9' then                             //То, если под индексом цифра не 9
  Value[Index]:=IntToStr(StrToInt(Value[Index]) + 1)[1]  //тогда заменяем её на цифру больше на 1
 else                                                    //в противном случае,
  begin                                                  //если под индексом девятка,
   Value[Index]:='0';                                    //То заменяем число под индексом на 0
   if Index < Value.Length then IncStr(Value, Index + 1) //и, если индекс не превышает длину числа переходим в рекурсию для дальнейшего повтора увеличения значения
   else Value:=Value+'1';                                //В противном случае, просто добавляем новый десяток к числу
  end;
end;

//Основная функция суммирования длинных чисел
function Summ(Str1, Str2:string):string;
var S1, S2, S3:string;
  i: Integer;
begin
 Result:='';                                          //Приступаем - чистим
 if Str1.Length > Str2.Length then                    //Нам необходимо поместить
  begin                                               //самое длинное число в S1,
   S1:=InvertStr(Str1);                               //а короткое в S2
   S2:=InvertStr(Str2);                               //Одновременно с этим
  end                                                 //переворачиваем число (строку)
 else                                                 //Это для того, чтобы идти
  begin                                               //по циклу линейно по числу S2
   S1:=InvertStr(Str2);                               //
   S2:=InvertStr(Str1);                               //
  end;                                                //
 for i:=1 to S2.Length do                             //Проходим циклом по S2
  begin                                               //
   S3:=IntToStr(StrToInt(S1[i])+StrToInt(S2[i]));     //S3 - это сумма двух чисел на текущей итерации
   if S3.Length > 1 then                              //Если получилось двузначное число (например 6+5 > 11)
    begin                                             //К результату подставлем вторую цифру из суммы;
     Result:=Result+S3[2];                            //первая - это десяток
     IncStr(S1, i + 1);                               //Далее мы увеличиваем следующую цифру в S1
    end                                               //Если же у нас получилось число от 1 до 9,
   else Result:=Result+S3;                            //то просто добавляем его к результату
  end;                                                //
 S1:=InvertStr(S1);                                   //Инвертируем число S1, т.к. мы его изменяли в процессе
 Result:=InvertStr(Result);                           //Резултирующее число тоже инвертируем обратно
 Result:=Copy(S1, 1, S1.Length - S2.Length) + Result; //Ну и в конце, добавляем к результату те цифры, которые были за границей наименьшего (поясню ниже)
 //Например у нас числа 746232 и 8976 (сумма = 755208)
 //S1 будет 232647, а S2 - 6798; Повторюсь, это сделано для того, чтобы идти равномерно по обеим числам
 //Выглядит это примерно так 746232
 //                         +  8976
 //74 - это как раз числа за границей наименьшего числа (S2)
 //В перевернутом состоянии мы идём так: 232647
 //                                      6798
 //Складываем 2 и 6, получаем  8 (Result = 8)
 //Складываем 3 и 7, получаем 10 (Result = 80), увелич. след. число в S1 (S1 = 233647)
 //Складываем 3 и 9, получаем 12 (Result = 802), увелич. след. число в S1 (S1 = 233747)
 //Складываем 7 и 8, получаем 15 (Result = 8025), увелич. след. число в S1 (S1 = 233757)
 //Всё, цикл окончен; Переворачивем S1 (S1 = 757332) и Result (Result = 5208)
 //Добавляем к Result числа за границей длины из S1 (Result = 755208)
end;